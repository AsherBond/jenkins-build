#!/bin/bash
#
# $1 = test repo number
#

# force a local default so this can be run on command line
DISTRELEASE=${DISTRELEASE-ubuntu-precise}
PACKAGE_REPO=${PACKAGE_REPO-proposed-packages}

set -e
set -x

[ -e $(dirname $0)/jenkins-deb-common ] || exit 1
. $(dirname $0)/jenkins-deb-common

jenkins_init
jenkins_set_vars

# Get defined branch of chef-cookbooks
git clone --recursive --branch ${GIT_BRANCH} https://github.com/rcbops/chef-cookbooks/

# RVM is throwing an unbound variable error
set +u
set +x
# Tell RVM to use Ruby-1.9.3
source /usr/local/rvm/scripts/rvm
rvm use 1.9.3

# Setup array of cookbooks to check with FoodCritic
declare -a cookbooks
cookbooks=( glance keystone nova horizon )
for book in ${cookbooks[@]}; do
        echo "Running FoodCritic against $book"
        # Epic fail on any violations (http://acrmp.github.com/foodcritic)
	if ! ( foodcritic -f any -f ~FC020 chef-cookbooks/cookbooks/$book ); then
		echo "$book cookbook violates FoodCritic ruleset"
		exit 1
	fi
done;

# Grab knife config etc..
echo "Copying chef configuration files"
cp -r ~/.chef chef-cookbooks

# Knife upload cookbooks to hosted chef
cd chef-cookbooks

echo "Uploading Cookbooks"
if ! ( rake upload_cookbooks ); then
    echo "Unable to upload cookbooks"
    exit 1
fi

echo "Uploading Roles"
if ! ( rake roles ); then
    echo "Unable to upload roles"
    exit 1
fi

cd ..

# Cleanup after ourselves
rm -rf chef-cookbooks
