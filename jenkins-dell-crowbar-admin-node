#!/bin/bash
#
# $1 = test repo number
#
env
# JENKINS COMMON
[ -e $(dirname $0)/jenkins-deb-common ] || exit 1
. $(dirname $0)/jenkins-deb-common
jenkins_init
jenkins_set_vars

function ipmi_restart() {
    # $1 - IP
    ip=$1
    log "Running ipmi_restart using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power cycle"
}

function ipmi_set_pxe() {
    # $1 - IP
    ip=$1
    log "Running ipmi_set_pxe using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis bootdev pxe"
}

function ipmi_pxe_reboot() {
    # $1 - IP
    ip=$1
    log "Running ipmi_pxe_reboot using:"
    log " ip: ${ip}"
    ipmi_set_pxe ${ip}
    # ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis bootdev pxe"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power cycle"
}

function ipmi_poweroff() {
    # $1 - IP
    ip=$1
    log "Running ipmi_poweroff using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power off"
}

function ipmi_poweron() {
    # $1 - IP
    ip=$1
    log "Running ipmi_poweron using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power on"
}

function crowbar_proposal() {
    # $1 - Service Name
    # $2 - Proposal Name
    # $3 - Action (create|commit)
    service=$1
    proposal_name=$2
    action=$3
    cmd='/opt/dell/bin/crowbar'
    log "Executing crowbar_proposal using:"
    log " Service: ${service}"
    log " Proposal Name: ${proposal_name}"
    log " Action: ${action}"
    
    if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i ${cmd}_${service} proposal ${action} ${proposal_name}' ); then
        log "Unable to ${action} the ${service} Proposal"
        exit 1
    fi
}

# Hide ipmi info
source ~jenkins/.ipmirc

SSH_OPTS='-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'

# SETUP ISO NAME
MILESTONE="d5"
if [ -z "$NOVA_RELEASE" ] || [ -z "$MILESTONE" ] || [ -z "$DISTRELEASE" ]; then
    ISONAME="crowbar.iso"
else
    BINARY_BUILD_RELEASE=`echo $DISTRELEASE | cut -d'-' -f2`
    ISONAME="crowbar-rcb-${NOVA_RELEASE}-${MILESTONE}-${BINARY_BUILD_RELEASE}.iso"
fi

# EXEC CROWBAR BUILD / BOOT ADMIN NODE
ssh openstack@${ISODEST} "sudo /home/openstack/incoming/fixup_crowbar.sh ${ISONAME}"
ipmi_pxe_reboot ${DRACIP}

# POWER OFF CONTROLLER NODE
ipmi_poweroff ${CONTROLLERIP}

# WAIT TO ENSURE TARGET GOES DOWN FOR REBOOT
sleep 60s

# WAIT FOR ADMIN NODE TO HAVE SSH
# This takes ~20 mins
count=1
while [ $count -lt 25 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( nc ${HEADNODE} 22 -w 1 -q 0 < /dev/null ); then
        break
    fi
done

# Give crowbar 10 minutes to install once SSH is available
count=1
while [ $count -lt 10 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_node_state status | grep -e crowbar | grep -e Ready' ); then
        break
    fi
    if [ $count == 10 ]; then
        echo "Installation of Crowbar Headnode failed"
        exit 1
    fi
done

sleep 120s

# POWER ON CONTROLLER NODE 
ipmi_set_pxe ${CONTROLLERIP}
ipmi_poweron ${CONTROLLERIP}

# WAIT TO ENSURE TARGET GOES DOWN FOR REBOOT
sleep 60s

## Loop and wait for the Controller node to get discovered
count=1
while [ $count -lt 15 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_node_state status --no-ready | grep d60-eb-69-8f-73-6c' ); then
        echo "Controller node discovered"
        break 
    fi
done
sleep 5

if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_node_state status --no-ready | grep d60-eb-69-8f-73-6c' ); then
    echo "Something went wrong with discovering the Controller node"
    exit 1
fi

##################################################
# Push MYSQL Proposal
crowbar_proposal "mysql" "jenkins" "create"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_mysql proposal create jenkins' ); then
#    echo "Unable to create the MySQL Proposal"
#    exit 1
#fi

## Ghetto Hack since we are disabling IPMI Barclamp
## SET PXE BOOT on CONTROLLER NODE 
ipmi_set_pxe ${CONTROLLERIP}

crowbar_proposal "mysql" "jenkins" "commit"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_mysql proposal commit jenkins' ); then
#    echo "Unable to commit the MySQL Proposal"
#    exit 1
#fi

# Loop and wait for the MySQL Proposal to get applied
count=1
while [ $count -lt 30 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_mysql list | grep jenkins' ); then
        echo "MySQL proposal successfully applied"
        break
    fi

    if [ $count == 29 ]; then
        echo "MySQL Proposal not successfully applied"
        exit 1
    fi
done
##################################################

##################################################
# Push the Keystone Proposal
crowbar_proposal "keystone" "jenkins" "create"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_keystone proposal create jenkins' ); then
#    echo "Unable to create the Keystone Proposal"
#    exit 1
#fi
crowbar_proposal "keystone" "jenkins" "commit"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_keystone proposal commit jenkins' ); then
#    echo "Unable to commit the Keystone Proposal"
#    exit 1
#fi
# Loop and wait for the Keystone Proposal to get applied
count=1
while [ $count -lt 15 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_keystone list | grep jenkins' ); then
        echo "Keystone proposal successfully applied"
        break
    fi
    if [ $count == 15 ]; then
        echo "Keystone Proposal not successfully applied"
        exit 1
    fi
done
##################################################

##################################################
# Push the Glance Proposal
crowbar_proposal "glance" "jenkins" "create"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_glance proposal create jenkins' ); then
#    echo "Unable to create the Glance Proposal"
#    exit 1
#fi
crowbar_proposal "glance" "jenkins" "commit"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_glance proposal commit jenkins' ); then
#    echo "Unable to commit the Glance Proposal"
#    exit 1
#fi
# Loop and wait for the Keystone Proposal to get applied
count=1
while [ $count -lt 15 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_glance list | grep jenkins' ); then
        echo "Glance proposal sucessfully applied"
        break
    fi
    if [ $count == 15 ]; then
        echo "Glance proposal not applied"
        exit 1
    fi
done
##################################################

##################################################
# Push the Nova Proposal
crowbar_proposal "nova" "jenkins" "create"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_nova proposal create jenkins' ); then
#    echo "Unable to create the Nova Proposal"
#    exit 1
#fi
crowbar_proposal "nova" "jenkins" "commit"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_nova proposal commit jenkins' ); then
#    echo "Unable to commit the Nova Proposal"
#    exit 1
#fi
if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_nova list | grep jenkins' ); then
    echo "Nova proposal not applied"
    exit 1
fi
##################################################

##################################################
# Push the Dash Proposal
crowbar_proposal "nova_dashboard" "jenkins" "create"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_nova_dashboard proposal create jenkins' ); then
#    echo "Unable to create the Dash Proposal"
#    exit 1
#fi
crowbar_proposal "nova_dashboard" "jenkins" "commit"
#if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_nova_dashboard proposal commit jenkins' ); then
#    echo "Unable to commit the Dash Proposal"
#    exit 1
#fi
if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_nova_dashboard list | grep jenkins' ); then
    echo "Dash proposal not applied"
    exit 1
fi
##################################################
