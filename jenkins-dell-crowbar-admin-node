#!/bin/bash
#
# $1 = test repo number
#
env
# JENKINS COMMON
[ -e $(dirname $0)/jenkins-deb-common ] || exit 1
. $(dirname $0)/jenkins-deb-common
jenkins_init
jenkins_set_vars

# IPMI VARIABLES
[ -e ~jenkins/.ipmirc ] || exit 1
. ~jenkins/.ipmirc

# Setup global variables
SSH_OPTS='-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
PROPOSAL_NAME="jenkins"

function ipmi_restart() {
    # $1 - IP
    ip=$1
    log "Running ipmi_restart using:"
    log " ip: ${ip}"

    # First check the status
    # This will return "Chassis Power is off|on"
    status=$(ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power status | cut -d ' ' -f4")
    if [ $status == "on" ]; then
        # Power is on, we can powercycle
        ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power cycle"
    else
        # Power is off, we can poweron
        ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power on"
    fi

    # we need to sleep for 5 seconds and make sure the box came back online
    sleep 5s
    status=$(ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power status | cut -d ' ' -f4")
    if [ $status == "off" ]; then
        # Server did not come back online
        log "Unable to powercycle server successfully"
        exit 1
    fi
}

function ipmi_set_pxe() {
    # $1 - IP
    ip=$1
    log "Running ipmi_set_pxe using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis bootdev pxe"
}

function ipmi_pxe_reboot() {
    # $1 - IP
    ip=$1
    log "Running ipmi_pxe_reboot using:"
    log " ip: ${ip}"
    ipmi_set_pxe ${ip}
    # ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis bootdev pxe"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power cycle"
}

function ipmi_poweroff() {
    # $1 - IP
    ip=$1
    log "Running ipmi_poweroff using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power off"
}

function ipmi_poweron() {
    # $1 - IP
    ip=$1
    log "Running ipmi_poweron using:"
    log " ip: ${ip}"
    ssh openstack@${IPMIHOST} "ipmitool -I lanplus -H ${ip} -U ${DRACUSER} -P ${DRACPASS} chassis power on"
}

function crowbar_proposal() {
    # $1 - Service Name
    # $2 - Action (create|commit)
    service=$1
    action=$2
    cmd="/opt/dell/bin/crowbar_${service} -U ${CROWBAR_USER} -P ${CROWBAR_PASS}"
    log "Executing crowbar_proposal using:"
    log " Service: ${service}"
    log " Action: ${action}"

    if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} "${cmd} proposal ${action} ${PROPOSAL_NAME}" ); then
        log "Unable to ${action} the ${service} Proposal"
        exit 1
    fi
}

function crowbar_proposal_status() {
    # $1 - Service Name
    # $2 - Wait Time
    service=$1
    wait_timer=${2:-15} # Default to 15 minutes if no wait_time provided
    cmd="/opt/dell/bin/crowbar_${service} -U ${CROWBAR_USER} -P ${CROWBAR_PASS}"
    log "Executing crowbar_proposal using:"
    log " Service: ${service}"
    log " Wait Time: ${wait_timer}"

    count=1
    while [ $count -lt $wait_timer ]; do
        count=$(( count + 1 ))
        sleep 60s
        if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} "${cmd} list | grep ${PROPOSAL_NAME}" ); then
            log "${service} proposal sucessfully applied"
            break
        fi
        if [ $count == $wait_timer ]; then
            log "${service} proposal not applied"
            exit 1
        fi
    done
}

# SETUP ISO NAME
MILESTONE="d5"
if [ -z "$NOVA_RELEASE" ] || [ -z "$MILESTONE" ] || [ -z "$DISTRELEASE" ]; then
    ISONAME="crowbar.iso"
else
    BINARY_BUILD_RELEASE=`echo $DISTRELEASE | cut -d'-' -f2`
    ISONAME="crowbar-rcb-${NOVA_RELEASE}-${MILESTONE}-${BINARY_BUILD_RELEASE}.iso"
fi

# EXEC CROWBAR BUILD
ssh openstack@${ISODEST} "sudo /home/openstack/incoming/fixup_crowbar.sh ${ISONAME}"

# PXE REBOOT HEADNODE
ipmi_pxe_reboot ${HEADNODE_DRAC_IP}

# POWER OFF CONTROLLER NODE / COMPUTE NODE
ipmi_poweroff ${CONTROLLER_DRAC_IP}
ipmi_poweroff ${COMPUTE_DRAC_IP}

# WAIT TO ENSURE TARGET GOES DOWN FOR REBOOT
sleep 60s

# WAIT FOR ADMIN NODE TO HAVE SSH
# This takes ~20 mins
count=1
while [ $count -lt 25 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( nc ${HEADNODE} 22 -w 1 -q 0 < /dev/null ); then
        break
    fi
done

# Give crowbar 10 minutes to install once SSH is available
count=1
while [ $count -lt 10 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_node_state status | grep -e crowbar | grep -e Ready' ); then
        break
    fi
    if [ $count == 10 ]; then
        echo "Installation of Crowbar Headnode failed"
        exit 1
    fi
done

sleep 120s

# POWER ON CONTROLLER NODE 
ipmi_set_pxe ${CONTROLLER_DRAC_IP}
ipmi_poweron ${CONTROLLER_DRAC_IP}

# WAIT TO ENSURE TARGET GOES DOWN FOR REBOOT
sleep 60s

## Loop and wait for the Controller node to get discovered
count=1
while [ $count -lt 15 ]; do
    count=$(( count + 1 ))
    sleep 60s
    if ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_node_state status --no-ready | grep d60-eb-69-8f-73-6c' ); then
        echo "Controller node discovered"
        break 
    fi
done
sleep 5

if ! ( ssh ${SSH_OPTS} crowbar@${HEADNODE} 'sudo -i /opt/dell/bin/crowbar_node_state status --no-ready | grep d60-eb-69-8f-73-6c' ); then
    echo "Something went wrong with discovering the Controller node"
    exit 1
fi

##################################################
# Push MYSQL Proposal
crowbar_proposal "mysql" "create"

## Ghetto Hack since we are disabling IPMI Barclamp
## SET PXE BOOT on CONTROLLER NODE 
ipmi_set_pxe ${CONTROLLER_DRAC_IP}

crowbar_proposal "mysql" "commit"
crowbar_proposal_status "mysql" 20
##################################################

##################################################
# Push the Keystone Proposal
crowbar_proposal "keystone" "create"
crowbar_proposal "keystone" "commit"
crowbar_proposal_status "keystone"
##################################################

##################################################
# Push the Glance Proposal
crowbar_proposal "glance" "create"
crowbar_proposal "glance" "commit"
crowbar_proposal_status "glance"
##################################################

##################################################
# Push the Nova Proposal
crowbar_proposal "nova" "create"
crowbar_proposal "nova" "commit"
crowbar_proposal_status "nova"
##################################################

##################################################
# Push the Dash Proposal
crowbar_proposal "nova_dashboard" "create"
crowbar_proposal "nova_dashboard" "commit"
crowbar_proposal_status "nova_dashboard"
##################################################
