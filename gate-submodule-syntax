#!/bin/bash

set -x
set -e
set -u

# Cleanup
rm -rf ${GIT_REPO} || :

# Clone the upstream repo
if ! ( git clone ${GIT_CLONE_URL} ); then
    echo "Unable to clone git repo: ${GIT_CLONE_URL}"
    exit 1
fi

# -- TRYING ANOTHER METHOD -- #
## Merge the proposed patch(es)
#cd ${GIT_REPO}
#if ! ( curl -s ${GIT_PATCH_URL} | git am ); then
#    echo "Unable to merge proposed patch: ${GIT_PATCH_URL}"
#    exit 1
#fi
#cd ../

# Apply the proposed diff
pushd ${GIT_REPO}

# make sure we are applying to the correct branch (eg folsom)
git checkout ${GIT_BRANCH}

if ! ( curl -s ${GIT_DIFF_URL} | git apply ); then
    echo "Unable to merge proposed patch: ${GIT_PATCH_URL}"
    exit 1
fi
popd

# Run knife cookbook test against the submodule
if ! ( knife cookbook test -o . ${GIT_REPO} ); then
    echo "Syntax check failed"
    exit 1
else
    echo "syntax check succeeded"
    RETVAL=0
fi

# Cleanup after ourselves
rm -rf ${GIT_REPO}

curl -s -K ~/.rcbjenkins-git-creds ${GIT_COMMENT_URL} -X 'POST' -d '{"body": "Gate: Submodule syntax\n * '${BUILD_URL}'consoleFull : SUCCESS"}'
exit ${RETVAL}
