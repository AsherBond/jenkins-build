#!/bin/bash

# force a local default so this can be run on command line
GIT_BRANCH=${GIT_BRANCH:-master}
GIT_CLONE_URL=${GIT_CLONE_URL:-git://github.com/rcbops/chef-cookbooks.git}
TAR_PKG_DIR_NAME=${TAR_PKG_DIR_NAME:-chef-cookbooks}
GIT_TAG=${GIT_TAG:-unset}

cd ${WORKSPACE}

# Clone the upstream repo
if ! ( git clone ${GIT_CLONE_URL} ${WORKSPACE}/git-checkout ); then
    echo "Unable to clone git repo: ${GIT_CLONE_URL}"
    exit 1
fi

cd ${WORKSPACE}/git-checkout

# Change to tag
if ! ( git checkout ${GIT_TAG} ); then
  echo "Unable to checkout branch: ${GIT_TAG}"
  exit 1
fi

# Pull in submodules
if ! ( git submodule init ); then
  echo "Unable to init submodules"
  exit 1
fi

if ! ( git submodule update ); then
  echo "Unable to update submodules"
  exit 1
fi

# Remove .git files/directories
find . -name ".git*" -exec rm -rf {} \;

# Back out of the working root
cd ..

mv ${WORKSPACE}/git-checkout ${WORKSPACE}/${TAR_PKG_DIR_NAME}-${GIT_TAG}
DIST_FILENAME=${WORKSPACE}/"${DIST_NAME}-${GIT_TAG}.tgz"

# Tar up the archive
tar zcvf ${DIST_FILENAME} ${DIST_DIRECTORY}

# Upload

# Update Manifest
#${JENKINS_BUILD_DIR}/scripts/manifest.py CURRENT.manifest ${RELEASE} "http://foo/${DIST_FILENAME}"

ls -lR ${WORKSPACE}
