#!/bin/bash

set -x
set -e
set -u

# Cleanup
rm -rf ${GIT_REPO} || :

# Clone the upstream repo
if ! ( git clone ${GIT_CLONE_URL} ); then
    echo "Unable to clone git repo: ${GIT_CLONE_URL}"
    exit 1
fi

# -- TRYING ANOTHER METHOD -- #
## Merge the proposed patch(es)
#cd ${GIT_REPO}
#if ! ( curl -s ${GIT_PATCH_URL} | git am ); then
#    echo "Unable to merge proposed patch: ${GIT_PATCH_URL}"
#    exit 1
#fi
#cd ../

# Apply the proposed diff
pushd ${GIT_REPO}

# make sure we are applying to the correct branch (eg folsom)
git checkout ${SUBMOD_BRANCH}

if ! ( curl -s ${GIT_DIFF_URL} | git apply ); then
    echo "Unable to merge proposed patch: ${GIT_PATCH_URL}"
    exit 1
fi
popd

# RVM is throwing an unbound variable error
set +x
set +u
# Tell RVM to use Ruby-1.9.3
source /usr/local/rvm/scripts/rvm
rvm use 1.9.3

# Run FoodCritic validations
echo "Running FoodCritic against ./${GIT_REPO}"
# stop complaining about FC024
if ! ( foodcritic -f any -f ~FC005 -f ~FC014 -f ~FC015 -f ~FC020 -f ~FC023 -f ~FC024 ${GIT_REPO} ); then
    echo "Pull request does not conform to FoodCritic"
    exit 1
else
    echo "Pull request conforms to necessary foodcritic tests"
    RETVAL=0
fi

# Commenting this block out, as the compiler warnings needs the source to sick around in the workspace
## Cleanup after ourselves
#echo "Cleaning up"
#cd ..
#rm -rf ${GIT_REPO}

curl -s -K ~/.rcbjenkins-git-creds ${GIT_COMMENT_URL} -X 'POST' -d '{"body": "Gate: Submodule Foodcritic\n * '${BUILD_URL}'consoleFull : SUCCESS"}'
exit ${RETVAL}
