#!/bin/bash
#
# $1 = test repo number
#

# force a local default so this can be run on command line
DISTRELEASE=${DISTRELEASE-ubuntu-precise}
PACKAGE_REPO=${PACKAGE_REPO-proposed-packages}

[ -e $(dirname $0)/jenkins-deb-common ] || exit 1
. $(dirname $0)/jenkins-deb-common

jenkins_init
jenkins_set_vars

kvm_instance_name=${BINARY_BUILD_RELEASE}-Essex-Allinone

# Cleanup from last run
declare -a log_files
log_files=( "nothing.log" "nova-network.log" "nova-network.log")
for file in ${log_files[@]}; do
    if [ -e ${kvm_instance_name}-$file ]; then
        rm ${kvm_instance_name}-$file
    fi
done

# this sets IP as a side-effect
get_ip $kvm_instance_name

function err_cleanup_chef() {
    echo "*** ENTERING THE TRAP HANDLER"
    # $1 - name
    if [ "${NOCLEAN-0}" == "1" ]; then
        exit 0
    fi

    echo "capturing stack trace output if it exists.  Errors are OK here"
    ssh root@${IP} 'cat /var/chef/cache/chef-stacktrace.out || :'

    # Delete node and client from chef-server
    ssh root@${IP} "/opt/opscode/bin/knife node delete \$HOSTNAME -y -E ${kvm_instance_name}"
    ssh root@${IP} "/opt/opscode/bin/knife client delete \$HOSTNAME -y -E ${kvm_instance_name}"
    ssh root@${IP} "/opt/opscode/bin/knife environment delete -y ${kvm_instance_name}"

    sudo virsh destroy ${1}
    sleep 5
    sudo lvremove -f ${LVM_ROOT}/${1}
    exit 1
}

MEMORY=2048000
maybe_make_kvm_instance $kvm_instance_name
trap "err_cleanup_chef ${kvm_instance_name}" SIGINT SIGTERM ERR
start_kvm_instance $kvm_instance_name ${IP} http://archive.ubuntu.com/ubuntu precise main

if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
    ssh root@${IP} apt-get update -y --force-yes
    ssh root@${IP} "DEBIAN_FRONTEND=noninteractive apt-get upgrade -y --force-yes"
    ssh root@${IP} apt-get install vlan -y --force-yes
else
    ssh root@${IP} rm -f /etc/cron.daily/man-db.cron
    ssh root@${IP} yum -y --exclude=kernel* update
    ssh root@${IP} yum install -y vconfig perl gcc make yum-fastestmirror redhat-lsb
    ssh root@${IP} modprobe nbd
fi

ssh root@${IP} vconfig add eth0 100
ssh root@${IP} vconfig add eth0 101

if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
    # Trying to fix a bug
    count=1
    while ! ssh root@${IP} "DEBIAN_FRONTEND=noninteractive apt-get install cgroup-lite -y --force-yes"; do
        if [ $count -gt 3 ]; then
            echo "Unable to install cgroup-lite"
            exit 1
        fi
        if ! ( ssh root@${IP} "/usr/bin/cgroups-mount" ); then
            :
        fi 
        sleep 2;
        count=$(( count + 1 ));
    done
fi

# Install system pre-reqs
if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
  ssh root@${IP} "apt-get install -y wget curl build-essential automake"
else
  ssh root@${IP} "yum install -y wget tar"
  #ssh root@${IP} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
  #ssh root@${IP} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"
  #ssh root@${IP} "cd RPMS; yum install -y *.rpm"
fi

# Try to quiet installer
ssh root@${IP} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '

# Install ruby/chef via opscode's fullstack installer
if ! ( ssh root@${IP} "bash < <(curl -s http://s3.amazonaws.com/opscode-full-stack/install.sh)" ); then
    ECHO "uNable to install Opscode FullStack Installer"
    exit 1
fi

EDITOR=/bin/true knife environment create ${kvm_instance_name}

# Setup Hosted Chef
ssh root@${IP} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; /opt/opscode/bin/knife configure client ./client-config'
if ! ( ssh root@${IP} "mkdir /etc/chef; cp -r ~/client-config/* /etc/chef/; /opt/opscode/bin/chef-client -E ${kvm_instance_name}" ); then
    echo "Unable to register with chef-server"
    exit 1
fi

#ssh root@${IP} "EDITOR=/bin/true /opt/opscode/bin/knife environment create ${kvm_instance_name}"
ssh root@${IP} "/opt/opscode/bin/knife node run_list add \$HOSTNAME role[jenkins-allinone] -E ${kvm_instance_name}"
ssh root@${IP} "/opt/opscode/bin/knife node run_list add \$HOSTNAME recipe[kong] -E ${kvm_instance_name}"
ssh root@${IP} "/opt/opscode/bin/knife node run_list add \$HOSTNAME recipe[exerstack] -E ${kvm_instance_name}"
ssh root@${IP} "/opt/opscode/bin/chef-client -E ${kvm_instance_name}"

sleep 20s

# These tests are not working on essex yet
ssh root@${IP} 'rm -rf /opt/exerstack/exercises/bundle.sh'
# ssh root@${IP} 'rm -rf /opt/exerstack/exercises/keystone-manage.sh'

if ! ( ssh root@${IP} 'cd /opt/exerstack; ./exercise.sh' ); then
    scp root@${IP}:/var/log/nova/nova-network.log ./kvm_instance_name-nova-network.log
    scp root@${IP}:/var/log/nova/nova-compute.log ./kvm_instance_name-nova-compute.log
    echo "Exerstack test suite failed"
    exit 1
fi

if ! ( ssh root@${IP} 'cd /opt/kong; ./run_tests.sh --version essex-final' ); then
    scp root@${IP}:/var/log/nova/nova-network.log ./kvm_instance_name-nova-network.log
    scp root@${IP}:/var/log/nova/nova-compute.log ./kvm_instance_name-nova-compute.log
    echo "Kong test suite failed"
    exit 1
else
    touch nothing.log
fi

trap - SIGINT SIGTERM EXIT ERR

echo "*** STARTING NODE SHUTDOWN"

# Delete node and client from chef-server
ssh root@${IP} "/opt/opscode/bin/knife node delete \$HOSTNAME -y -E ${kvm_instance_name}"
ssh root@${IP} "/opt/opscode/bin/knife client delete \$HOSTNAME -y -E ${kvm_instance_name}"
ssh root@${IP} "/opt/opscode/bin/knife environment delete -y ${kvm_instance_name}"

sudo virsh destroy ${kvm_instance_name}
sleep 5
sudo lvremove -f ${LVM_ROOT}/${kvm_instance_name}
